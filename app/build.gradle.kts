/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("app.cash.sqldelight") version "2.0.2"
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)
    `java-library`
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}
configurations { create("externalLibs") }

repositories {
    // Use Maven Central for resolving dependencies.
    google()
    mavenCentral()
    maven { url = uri("https://jitpack.io") }
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    implementation("ch.qos.logback:logback-classic:1.5.17")
    implementation("org.apache.logging.log4j:log4j-bom:2.24.3")
    implementation("org.apache.logging.log4j:log4j-api:2.24.3")
    implementation("org.apache.logging.log4j:log4j-core:2.24.3")

    implementation(libs.dotenv)
    implementation(libs.discord.jda)
    implementation(libs.guava)
    implementation(libs.ktor)
    implementation(libs.ktor.network)
    implementation("app.cash.sqldelight:sqlite-driver:2.0.2")

}

sqldelight {
    databases {
        create("NocturneDB") {
            packageName.set("org.nocturne")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.nocturne.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
